{"version":3,"sources":["services/logService.js","services/httpService.js","services/spotifyService.js","components/logInWithSpotify.jsx","components/common/loader.jsx","components/createProfile.jsx","components/graphs/radarChartCompat.jsx","components/navTab.jsx","components/shareUrl.jsx","components/bioCard.jsx","components/myReports.jsx","components/common/cardColumn.jsx","components/artistsCards.jsx","components/displayProfile.jsx","components/graphs/radarChartTwoProfiles.jsx","components/reportTitleCard.jsx","components/genres.jsx","components/tracks.jsx","components/displayCompatifyReport.jsx","components/sharedProfile.jsx","components/createCompatifyReport.jsx","components/loggedIn.jsx","components/notFound.jsx","components/navBar.jsx","components/logout.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiUrl","process","API_URL","authUrlKey","userIdKey","refreshTokenKey","shareUrlKey","a","http","authUrl","data","auth_url","saveSpotifyUserId","UserId","localStorage","setItem","getRefreshToken","getItem","userId","profile","getSpotifyUser","spotifyUser","user_id","share_url","pk","shareUrl","getCurrentSpotifyUser","refreshToken","removeItem","payload","currentUser","id","newShareUrl","authorizeSpotifyAccountAccess","createCompatibilityReport","qs","stringify","getCompatibilityReport","getAllReportsForUser","removeRefreshToken","getSpotifyUserByPk","getSpotifyUserId","saveRefreshToken","getSharedProfile","getUserShareUrl","getNewShareUrl","removeShareUrl","createProfile","saveShareUrl","value","getShareUrl","getProfile","getAuthUrl","getUserId","getToken","url","LogInWithSpotify","state","logInWithSpotify","sptfy","authURl","compatifyShareUrl","props","window","location","className","onClick","this","message","Component","Loader","style","fontSize","CreateProfile","loading","currentUrl","setState","Redirect","to","RadarChartCompat","makeDataObject","trait","A","avg_track_valence","fullMark","avg_track_instru","avg_track_popularity","avg_track_energy","range","name","radarData","outerRadius","width","height","stroke","dataKey","angle","domain","fill","fillOpacity","wrapperStyle","color","NavTab","title","link","activeTab","navLink","baseClass","href","ShareUrl","disabled","BioCard","handleChangeTab","tabTitle","images","external_urls","info","sharing","options","textTransform","src","alt","spotify","Link","MyReports","getData","reports","map","r","key","creation_date","user2_name","CardColumn","titleText","children","ArtistsCards","artists","maxWidth","display","marginLeft","marginRight","Fragment","shortid","generate","popularity","genres","g","DisplayProfile","getProfileData","history","push","RadarChartTwoProfiles","data1","data2","B","class","ReportTitleCard","user1Data","user2Data","report","content","differences","average_difference","valence_diff","instru_diff","popularity_diff","energy_diff","range_diff","Genres","index","Tracks","tracks","t","album","DisplayCompatifyReport","match","params","getReport","getUser1Data","user2","getUser2Data","obj","user2Id","overlapping_genres","overlapping_artists","overlapping_tracks","SharedProfile","getSharedProfileData","code","shareCode","CreateCompatifyReport","createReport","LoggedIn","profileExists","tokenInfo","refresh_token","NotFound","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Logout","App","Switch","Route","path","component","from","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.114dbc98.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\n// This method was created to get rid of the bidirectional dependency between auth and http services.\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from \"./httpService\";\r\nimport qs from \"qs\";\r\n\r\nconst apiUrl = process.env.API_URL\r\n  ? process.env.API_URL\r\n  : \"http://localhost:8000/api\";\r\nconst authUrlKey = \"authUrl\";\r\nconst userIdKey = \"spotifyUserId\";\r\nconst spotifyCodeUrlKey = \"spotifyCodeUrl\";\r\nconst refreshTokenKey = \"refreshToken\";\r\nconst shareUrlKey = \"shareUrl\";\r\n\r\nexport async function authorizeSpotifyAccountAccess() {\r\n  const response = await http.get(apiUrl + \"/auth\");\r\n  const authUrl = response.data.auth_url;\r\n\r\n  return authUrl;\r\n}\r\n\r\nexport function saveShareUrl(value) {\r\n  localStorage.setItem(shareUrlKey, value);\r\n}\r\n\r\nexport function getShareUrl() {\r\n  return localStorage.getItem(shareUrlKey);\r\n}\r\n\r\nexport function removeShareUrl() {\r\n  return localStorage.removeItem(shareUrlKey);\r\n}\r\n\r\nexport function saveSpotifyUserId(UserId) {\r\n  localStorage.setItem(userIdKey, UserId);\r\n}\r\n\r\nexport function getSpotifyUserId() {\r\n  return localStorage.getItem(userIdKey);\r\n}\r\n\r\nexport function removeSpotifyUserId() {\r\n  return localStorage.removeItem(userIdKey);\r\n}\r\n\r\nexport function saveRefreshToken(refreshToken) {\r\n  localStorage.setItem(refreshTokenKey, refreshToken);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(refreshTokenKey);\r\n}\r\n\r\nexport function removeRefreshToken() {\r\n  return localStorage.removeItem(refreshTokenKey);\r\n}\r\n\r\nexport function createProfile(userId, refreshToken) {\r\n  return http.get(\r\n    apiUrl +\r\n      `/generate_profile/?user_id=${userId}&refresh_token=${refreshToken}`\r\n  );\r\n}\r\n\r\nexport async function getProfile(userId) {\r\n  const profile = await http.get(apiUrl + `/get_profile/?user_id=${userId}`);\r\n  const spotifyUser = await getSpotifyUser(userId);\r\n  const { user_id, share_url } = spotifyUser.data;\r\n\r\n  const data = { user_id, share_url, ...profile.data };\r\n\r\n  return data;\r\n}\r\n\r\nexport function getSpotifyUser(userId) {\r\n  return http.get(apiUrl + `/get_spotify_user/?user_id=${userId}`);\r\n}\r\n\r\nexport async function getSpotifyUserByPk(pk) {\r\n  const response = await http.get(apiUrl + `/get_spotify_user_by_pk/?pk=${pk}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function getSharedProfile(shareUrl) {\r\n  const response = await http.get(\r\n    apiUrl + `/get_shared_profile/?code=${shareUrl}`\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport function createCompatibilityReport(userId, shareUrl) {\r\n  const data = { user_id: userId, share_url: shareUrl };\r\n  return http.post(apiUrl + \"/compatify/\", qs.stringify(data));\r\n}\r\n\r\nexport function getCompatibilityReport(pk) {\r\n  return http.get(apiUrl + `/get_report/?pk=${pk}`);\r\n}\r\n\r\nexport function getToken(url) {\r\n  return http.get(apiUrl + `/auth_get_token/?url=${url}`);\r\n}\r\n\r\nexport function getCode() {\r\n  return localStorage.getItem(spotifyCodeUrlKey);\r\n}\r\n\r\nexport function getAuthUrl() {\r\n  return localStorage.getItem(authUrlKey);\r\n}\r\n\r\nexport function getUserId() {\r\n  return localStorage.getItem(userIdKey);\r\n}\r\n\r\nexport async function getCurrentSpotifyUser(refreshToken) {\r\n  if (!refreshToken) {\r\n    removeSpotifyUserId();\r\n    return null;\r\n  }\r\n\r\n  const payload = `refresh_token=${refreshToken}`;\r\n  const currentUser = await http.post(apiUrl + \"/get_current_user/\", payload);\r\n  saveSpotifyUserId(currentUser.data.id);\r\n\r\n  return currentUser;\r\n}\r\n\r\nexport function getUserShareUrl(userId) {\r\n  return http.get(apiUrl + `/get_share_url/?user_id=${userId}`);\r\n}\r\n\r\nexport async function getNewShareUrl() {\r\n  const refreshToken = getRefreshToken();\r\n  const { data } = await getCurrentSpotifyUser(refreshToken);\r\n  const newShareUrl = http.get(apiUrl + `/new_share_url/?user_id=${data.id}`);\r\n  return newShareUrl;\r\n}\r\n\r\nexport async function getAllReportsForUser(userId) {\r\n  const response = await http.get(\r\n    apiUrl + `/get_all_reports_for_user/?user_1_id=${userId}`\r\n  );\r\n\r\n  return response.data;\r\n}\r\n\r\nexport default {\r\n  authorizeSpotifyAccountAccess,\r\n  createCompatibilityReport,\r\n  getCompatibilityReport,\r\n  getCurrentSpotifyUser,\r\n  getAllReportsForUser,\r\n  removeRefreshToken,\r\n  getSpotifyUserByPk,\r\n  saveSpotifyUserId,\r\n  getSpotifyUserId,\r\n  saveRefreshToken,\r\n  getSharedProfile,\r\n  getRefreshToken,\r\n  getUserShareUrl,\r\n  getNewShareUrl,\r\n  removeShareUrl,\r\n  createProfile,\r\n  saveShareUrl,\r\n  getShareUrl,\r\n  getProfile,\r\n  getAuthUrl,\r\n  getUserId,\r\n  getToken\r\n};\r\n","import React, { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass LogInWithSpotify extends Component {\r\n  state = {};\r\n\r\n  logInWithSpotify = async () => {\r\n    const authURl = await sptfy.authorizeSpotifyAccountAccess();\r\n    const { compatifyShareUrl } = this.props;\r\n\r\n    if (compatifyShareUrl) {\r\n      sptfy.saveShareUrl(compatifyShareUrl);\r\n    }\r\n\r\n    window.location = authURl;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"btn btn-secondary\" onClick={this.logInWithSpotify}>\r\n        {this.props.message || \"Log in with Spotify\"}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogInWithSpotify;\r\n","import React from \"react\";\r\n\r\nconst Loader = props => {\r\n  return (\r\n    <>\r\n      <div className=\"center loader\">\r\n        <i className=\"fa fa-spinner fa-spin\" />\r\n        <p className=\"loading-ellipse\" style={{ fontSize: \"0.25em\" }}>\r\n          {props.message}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Loader from \"./common/loader\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass CreateProfile extends Component {\r\n  state = {\r\n    data: {},\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = sptfy.getUserId();\r\n    const refreshToken = sptfy.getRefreshToken();\r\n\r\n    if (userId && refreshToken) this.createProfile(userId, refreshToken);\r\n  }\r\n\r\n  createProfile = async (userId, currentUrl) => {\r\n    const response = await sptfy.createProfile(userId, currentUrl);\r\n    this.setState({ data: response.data, loading: false });\r\n  };\r\n\r\n  render() {\r\n    const shareUrl = sptfy.getShareUrl();\r\n    const userId = sptfy.getUserId();\r\n    const { loading } = this.state;\r\n\r\n    if (loading) return <Loader message={\"Creating profile for \" + userId} />;\r\n    if (shareUrl) return <Redirect to={\"compatify/\"} />;\r\n\r\n    return <Redirect to={`profile/${userId}`} />;\r\n  }\r\n}\r\n\r\nexport default CreateProfile;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  Legend,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nclass RadarChartCompat extends Component {\r\n  state = {};\r\n\r\n  makeDataObject = data => {\r\n    const {\r\n      avg_track_valence,\r\n      avg_track_instru,\r\n      avg_track_popularity,\r\n      avg_track_energy,\r\n      range\r\n    } = data;\r\n\r\n    return [\r\n      {\r\n        trait: \"Valence\",\r\n        A: avg_track_valence,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Instrumentalness\",\r\n        A: avg_track_instru,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Popularity\",\r\n        A: avg_track_popularity,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Energy\",\r\n        A: avg_track_energy,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Range\",\r\n        A: range,\r\n        fullMark: 1\r\n      }\r\n    ];\r\n  };\r\n\r\n  render() {\r\n    const { name, data } = this.props;\r\n    const radarData = this.makeDataObject(data);\r\n\r\n    return (\r\n      <div className=\"card text-white bg-dark mb-3\">\r\n        <div className=\"card-body\">\r\n          <RadarChart\r\n            outerRadius={120}\r\n            width={500}\r\n            height={300}\r\n            data={radarData}\r\n          >\r\n            <PolarGrid stroke=\"#ffffff\" />\r\n            <PolarAngleAxis dataKey=\"trait\" stroke=\"#ffffff\" />\r\n            <PolarRadiusAxis angle={18} domain={[0, 1]} />\r\n            <Radar\r\n              name={name}\r\n              dataKey=\"A\"\r\n              stroke=\"#8884d8\"\r\n              fill=\"#8884d8\"\r\n              fillOpacity={0.6}\r\n            />\r\n            <Legend />\r\n            <Tooltip wrapperStyle={{ color: \"black\" }} />\r\n          </RadarChart>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadarChartCompat;\r\n","import React from \"react\";\r\n\r\nconst NavTab = props => {\r\n  const { title, link, onClick, activeTab } = props;\r\n  const baseClass = \"nav-link bg-dark text-light\";\r\n  const navLink = title === activeTab ? baseClass + \" active\" : baseClass;\r\n\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a className={navLink} href={link} onClick={() => onClick(title)}>\r\n        {title}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavTab;\r\n","import React, { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass ShareUrl extends Component {\r\n  state = { url: this.props.shareUrl, loading: false };\r\n\r\n  newShareUrl = async () => {\r\n    this.setState({ loading: true });\r\n    const { data } = await sptfy.getNewShareUrl();\r\n    this.setState({ url: data.share_url, loading: false });\r\n  };\r\n\r\n  render() {\r\n    const { url, loading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {url ? (\r\n          <h3>compatify.io/p{url}</h3>\r\n        ) : (\r\n          <p>Click the button below to generate a share url.</p>\r\n        )}\r\n\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={this.newShareUrl}\r\n          disabled={loading}\r\n        >\r\n          {!loading ? \"Get a new share URL\" : \"Getting new URL...\"}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShareUrl;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavTab from \"./navTab\";\r\nimport ShareUrl from \"./shareUrl\";\r\n\r\nclass BioCard extends Component {\r\n  state = { activeTab: \"Info\" };\r\n\r\n  handleChangeTab = tabTitle => {\r\n    this.setState({ activeTab: tabTitle });\r\n  };\r\n\r\n  render() {\r\n    const { currentUser, data } = this.props;\r\n    const { id, images, external_urls } = currentUser;\r\n    const { activeTab } = this.state;\r\n\r\n    const tabTitles = {\r\n      info: \"Info\",\r\n      sharing: \"Sharing\",\r\n      options: \"Options\"\r\n    };\r\n    const { info, sharing, options } = tabTitles;\r\n\r\n    return (\r\n      <div className=\"card text-white bg-dark mb-3 text-center\">\r\n        <div className=\"card-header\">\r\n          <ul className=\"nav nav-tabs card-header-tabs\">\r\n            <NavTab\r\n              title={info}\r\n              link=\"#\"\r\n              onClick={this.handleChangeTab}\r\n              activeTab={activeTab}\r\n            />\r\n            <NavTab\r\n              title={sharing}\r\n              link=\"#\"\r\n              onClick={this.handleChangeTab}\r\n              activeTab={activeTab}\r\n            />\r\n            <NavTab\r\n              title={options}\r\n              link=\"#\"\r\n              onClick={this.handleChangeTab}\r\n              activeTab={activeTab}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\" style={{ textTransform: \"uppercase\" }}>\r\n            {id}\r\n          </h5>\r\n          {activeTab === info && (\r\n            <>\r\n              <p className=\"card-text\">\r\n                <img src={images[0] && images[0].url} alt=\"Profile\" />\r\n              </p>\r\n              <a href={external_urls.spotify} className=\"btn btn-primary\">\r\n                View on Spotify\r\n              </a>\r\n            </>\r\n          )}\r\n          {activeTab === sharing && (\r\n            <>\r\n              <p className=\"card-text\">\r\n                <ShareUrl userId={id} shareUrl={data.share_url} />\r\n              </p>\r\n            </>\r\n          )}\r\n          {activeTab === options && (\r\n            <>\r\n              <p className=\"card-text\">\r\n                <Link to=\"/create-profile\">\r\n                  <button className=\"btn btn-primary\">Update Profile</button>\r\n                </Link>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BioCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass MyReports extends Component {\r\n  state = { data: {}, loading: true };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = async () => {\r\n    const response = await sptfy.getAllReportsForUser(this.props.userId);\r\n    this.setState({ data: response, loading: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, loading } = this.state;\r\n    const { reports } = data;\r\n\r\n    if (loading) return <>Getting reports...</>;\r\n    if (!reports) return <>No reports!</>;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"card text-white bg-dark mb-3\">\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\"></p>\r\n            <h4>My Compatify Reports</h4>\r\n            <ul>\r\n              {reports.map(r => {\r\n                return (\r\n                  <li key={r.creation_date + r.id}>\r\n                    <Link to={`/display-report/${r.id}`}>\r\n                      You and {r.user2_name}, {r.creation_date}\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyReports;\r\n","import React from \"react\";\r\n\r\nconst CardColumn = props => {\r\n  const { titleText, children } = props;\r\n  return (\r\n    <>\r\n      {titleText && <h4>{titleText}</h4>}\r\n      <div className=\"card-columns\">{children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardColumn;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport CardColumn from \"./common/cardColumn\";\r\n\r\nconst ArtistsCards = props => {\r\n  const { titleText, artists } = props;\r\n  const style = {\r\n    maxWidth: \"50%\",\r\n    height: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  };\r\n  return (\r\n    <CardColumn titleText={titleText}>\r\n      {artists &&\r\n        artists.map(a => {\r\n          return (\r\n            <React.Fragment key={shortid.generate()}>\r\n              <div className=\"card text-white bg-dark mb-3\">\r\n                <img\r\n                  src={a.images[0] && a.images[0].url}\r\n                  className=\"card-img-top\"\r\n                  alt=\"\"\r\n                  style={style}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{a.name}</h5>\r\n                  <p className=\"card-text\">\r\n                    <b>Popularity: </b>\r\n                    {a.popularity}/100\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Genres: </b>\r\n                    {a.genres.map(g => (\r\n                      <li key={g}>{g}</li>\r\n                    ))}\r\n                  </p>\r\n                  <a\r\n                    href={a.external_urls.spotify}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    View on Spotify\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </CardColumn>\r\n  );\r\n};\r\n\r\nexport default ArtistsCards;\r\n","import React, { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\nimport Loader from \"./common/loader\";\r\nimport RadarChartCompat from \"./graphs/radarChartCompat\";\r\nimport BioCard from \"./bioCard\";\r\nimport MyReports from \"./myReports\";\r\nimport ArtistsCards from \"./artistsCards\";\r\n\r\nclass DisplayProfile extends Component {\r\n  state = { data: {}, currentUser: {}, loading: true, error: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.getProfileData();\r\n  }\r\n\r\n  getProfileData = async () => {\r\n    const refreshToken = sptfy.getRefreshToken();\r\n    if (!refreshToken) {\r\n      this.props.history.push(\"/login\");\r\n      return null;\r\n    }\r\n    const currentUser = await sptfy.getCurrentSpotifyUser(refreshToken);\r\n    try {\r\n      const data = await sptfy.getProfile(currentUser.data.id);\r\n      this.setState({ data, currentUser: currentUser.data, loading: false });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.setState({ loading: false, error: \"Could not find profile!\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, currentUser, loading, error } = this.state;\r\n    const {\r\n      user_id,\r\n      avg_track_valence,\r\n      avg_track_instru,\r\n      avg_track_popularity,\r\n      avg_track_energy,\r\n      range,\r\n      artists\r\n    } = data;\r\n    const radarData = {\r\n      avg_track_valence,\r\n      avg_track_instru,\r\n      avg_track_popularity,\r\n      avg_track_energy,\r\n      range\r\n    };\r\n\r\n    if (loading) return <Loader message={\"Getting profile\"} />;\r\n\r\n    if (error) return <>{error}</>;\r\n\r\n    console.log(process.env.API_URL);\r\n\r\n    return (\r\n      <>\r\n        <BioCard currentUser={currentUser} data={data} />\r\n\r\n        <div className=\"card-deck\">\r\n          <RadarChartCompat name={user_id} data={radarData} />\r\n          <MyReports userId={user_id} />\r\n        </div>\r\n\r\n        <ArtistsCards artists={artists} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayProfile;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  Legend,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nclass RadarChartTwoProfiles extends Component {\r\n  state = {};\r\n\r\n  makeDataObject = (data1, data2) => {\r\n    const obj = [\r\n      {\r\n        trait: \"Valence\",\r\n        A: data1.avg_track_valence,\r\n        B: data2.avg_track_valence,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Instrumentalness\",\r\n        A: data1.avg_track_instru,\r\n        B: data2.avg_track_instru,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Popularity\",\r\n        A: data1.avg_track_popularity,\r\n        B: data2.avg_track_popularity,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Energy\",\r\n        A: data1.avg_track_energy,\r\n        B: data2.avg_track_energy,\r\n        fullMark: 1\r\n      },\r\n      {\r\n        trait: \"Range\",\r\n        A: data1.range,\r\n        B: data2.range,\r\n        fullMark: 1\r\n      }\r\n    ];\r\n\r\n    return obj;\r\n  };\r\n\r\n  render() {\r\n    const { data1, data2 } = this.props;\r\n    const radarData = this.makeDataObject(data1, data2);\r\n\r\n    return (\r\n            <div class=\"card text-white bg-dark mb-3\">\r\n            <div class=\"card-body\">\r\n          <p class=\"card-text\">\r\n      <RadarChart outerRadius={120} width={500} height={400} data={radarData}>\r\n        <PolarGrid stroke=\"#ffffff\" />\r\n        <PolarAngleAxis dataKey=\"trait\" stroke=\"#ffffff\"/>\r\n        <PolarRadiusAxis angle={18} domain={[0, 1]} />\r\n        <Radar\r\n          name={data1.user_id}\r\n          dataKey=\"A\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n          fillOpacity={0.6}\r\n        />\r\n        <Radar\r\n          name={data2.user_id}\r\n          dataKey=\"B\"\r\n          stroke=\"#800000\"\r\n          fill=\"#800000\"\r\n          fillOpacity={0.6}\r\n        />\r\n        <Legend />\r\n        <Tooltip />\r\n      </RadarChart>\r\n      </p>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadarChartTwoProfiles;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ReportTitleCard extends Component {\r\n  handleChangeTab = tabTitle => {\r\n    this.setState({ activeTab: tabTitle });\r\n  };\r\n\r\n  render() {\r\n    const { user1Data, user2Data, report } = this.props;\r\n    const { differences, average_difference } = report.content;\r\n    const {\r\n      valence_diff,\r\n      instru_diff,\r\n      popularity_diff,\r\n      energy_diff,\r\n      range_diff\r\n    } = differences;\r\n\r\n    return (\r\n      <div className=\"card bg-dark mb-3 text-center text-white\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">\r\n            {user1Data.user_id} and {user2Data.user_id}\r\n          </h4>\r\n          <h6 className=\"card-title\">Created on {report.creation_date}</h6>\r\n          <p className=\"card-text\">\r\n            Differences: {valence_diff}, {instru_diff}, {popularity_diff},\r\n            {energy_diff}, {range_diff}\r\n          </p>\r\n          <p>Average Difference: {average_difference}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportTitleCard;\r\n","import React from \"react\";\r\n\r\nconst Genres = props => {\r\n  const { genres } = props;\r\n\r\n  return (\r\n    <>\r\n      {genres &&\r\n        genres.map((g, index) => {\r\n          return (\r\n            <span index={index} class=\"badge badge-dark mx-1\">\r\n              {g}\r\n            </span>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React from \"react\";\r\nimport CardColumn from \"./common/cardColumn\";\r\n\r\nconst Tracks = props => {\r\n  const { tracks } = props;\r\n  const style = {\r\n    maxWidth: \"50%\",\r\n    height: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  };\r\n  return (\r\n    <CardColumn>\r\n      {tracks &&\r\n        tracks.map((t, index) => {\r\n          return (\r\n            <div key={index} className=\"card text-white bg-dark mb-3\">\r\n              <img\r\n                src={t.album.images[0] && t.album.images[0].url}\r\n                className=\"card-img-top\"\r\n                alt=\"\"\r\n                style={style}\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{t.name}</h5>\r\n                <h6 className=\"card-title\">{t.artists[0].name}</h6>\r\n                <p className=\"card-text\">\r\n                  <b>Popularity: </b>\r\n                  {t.popularity}/100\r\n                </p>\r\n                <a href={t.external_urls.spotify} className=\"btn btn-secondary\">\r\n                  View on Spotify\r\n                </a>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </CardColumn>\r\n  );\r\n};\r\n\r\nexport default Tracks;\r\n","import React, { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\nimport Loader from \"./common/loader\";\r\nimport RadarChartTwoProfiles from \"./graphs/radarChartTwoProfiles\";\r\nimport ReportTitleCard from \"./reportTitleCard\";\r\nimport ArtistsCards from \"./artistsCards\";\r\nimport Genres from \"./genres\";\r\nimport Tracks from \"./tracks\";\r\n\r\nclass DisplayCompatifyReport extends Component {\r\n  state = {\r\n    user1Data: {},\r\n    user2Data: {},\r\n    report: { content: { differences: {} } },\r\n    loading: true,\r\n    error: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await this.getData();\r\n      const { user1Data, user2Data, report } = data;\r\n      this.setState({\r\n        user1Data,\r\n        user2Data,\r\n        report,\r\n        loading: false\r\n      });\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.setState({\r\n        loading: false,\r\n        error: \"Couldn't get compatibility report.\"\r\n      });\r\n    }\r\n  }\r\n\r\n  getData = async () => {\r\n    const { pk } = this.props.match.params;\r\n    const report = await this.getReport(pk);\r\n    const user1Data = await this.getUser1Data();\r\n    const user2 = await sptfy.getSpotifyUserByPk(report.user2);\r\n    const user2Data = await this.getUser2Data(user2.user_id);\r\n\r\n    const obj = {\r\n      user1Data,\r\n      user2Data,\r\n      report\r\n    };\r\n\r\n    return obj;\r\n  };\r\n\r\n  getUser1Data = async () => {\r\n    const refreshToken = sptfy.getRefreshToken();\r\n\r\n    if (!refreshToken) {\r\n      this.props.history.push(\"/login\");\r\n      return null;\r\n    }\r\n\r\n    const currentUser = await sptfy.getCurrentSpotifyUser(refreshToken);\r\n    const userId = currentUser.data.id;\r\n    const user1Data = await sptfy.getProfile(userId);\r\n\r\n    return user1Data;\r\n  };\r\n\r\n  getUser2Data = async user2Id => {\r\n    const response = await sptfy.getUserShareUrl(user2Id);\r\n    const user2Data = await sptfy.getSharedProfile(response.data.share_url);\r\n\r\n    return user2Data;\r\n  };\r\n\r\n  getReport = async pk => {\r\n    const report = await sptfy.getCompatibilityReport(pk);\r\n\r\n    return report.data;\r\n  };\r\n\r\n  render() {\r\n    const { user1Data, user2Data, report, loading, error } = this.state;\r\n    const {\r\n      overlapping_genres,\r\n      overlapping_artists,\r\n      overlapping_tracks\r\n    } = report.content;\r\n\r\n    if (error) return <>{error}</>;\r\n\r\n    if (loading) return <Loader message={\"Getting Compatify report\"} />;\r\n\r\n    return (\r\n      <>\r\n        <ReportTitleCard\r\n          user1Data={user1Data}\r\n          user2Data={user2Data}\r\n          report={report}\r\n        />\r\n\r\n        <RadarChartTwoProfiles data1={user1Data} data2={user2Data} />\r\n\r\n        <h4>Genres in Common</h4>\r\n        <Genres genres={overlapping_genres} />\r\n\r\n        <h4>Artists in Common</h4>\r\n        <ArtistsCards artists={overlapping_artists} />\r\n\r\n        <h4>Tracks in Common</h4>\r\n        <Tracks tracks={overlapping_tracks} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayCompatifyReport;\r\n","import React, { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\nimport Loader from \"./common/loader\";\r\nimport LogInWithSpotify from \"./logInWithSpotify\";\r\nimport RadarChartCompat from \"./graphs/radarChartCompat\";\r\n\r\nclass SharedProfile extends Component {\r\n  state = { data: {}, loading: true, error: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.getSharedProfileData();\r\n  }\r\n\r\n  getSharedProfileData = async () => {\r\n    const code = this.props.match.params.shareCode;\r\n    try {\r\n      const data = await sptfy.getSharedProfile(code);\r\n      this.setState({ data, loading: false });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.setState({ loading: false, error: \"Invalid code!\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, loading, error } = this.state;\r\n    const { user_id, share_url } = data;\r\n    const currentUser = sptfy.getSpotifyUserId();\r\n\r\n    if (loading) return <Loader message={\"Getting profile\"} />;\r\n\r\n    if (error) return <>{error}</>;\r\n\r\n    return (\r\n      <>\r\n        <h1>{user_id}</h1>\r\n        {user_id === currentUser &&\r\n          \"This is what others will see when they use your share URL.\"}\r\n        <RadarChartCompat name={user_id} data={data} />\r\n        <p>Are you musically compatible with {user_id}?</p>\r\n        <LogInWithSpotify message=\"Compatify!\" compatifyShareUrl={share_url} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SharedProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport sptfy from \"../services/spotifyService\";\r\nimport Loader from \"./common/loader\";\r\n\r\nclass CreateCompatifyReport extends Component {\r\n  state = {\r\n    user1Data: {},\r\n    user2Data: {},\r\n    report: {},\r\n    loading: true,\r\n    error: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await this.getData();\r\n      const { user1Data, user2Data, report } = data;\r\n      this.setState({\r\n        user1Data,\r\n        user2Data,\r\n        report,\r\n        loading: false\r\n      });\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this.setState({\r\n        loading: false,\r\n        error: \"Couldn't create compatibility report.\"\r\n      });\r\n    }\r\n  }\r\n\r\n  getData = async () => {\r\n    const userId = sptfy.getSpotifyUserId();\r\n    const shareUrl = sptfy.getShareUrl();\r\n\r\n    const user1Data = await this.getUser1Data();\r\n    const user2Data = await this.getUser2Data(shareUrl);\r\n    const report = await this.createReport(userId, shareUrl);\r\n\r\n    const obj = {\r\n      user1Data,\r\n      user2Data,\r\n      report\r\n    };\r\n\r\n    return obj;\r\n  };\r\n\r\n  getUser1Data = async () => {\r\n    const refreshToken = sptfy.getRefreshToken();\r\n\r\n    if (!refreshToken) {\r\n      this.props.history.push(\"/login\");\r\n      return null;\r\n    }\r\n\r\n    const currentUser = await sptfy.getCurrentSpotifyUser(refreshToken);\r\n    const userId = currentUser.data.id;\r\n    const user1Data = await sptfy.getProfile(userId);\r\n\r\n    return user1Data;\r\n  };\r\n\r\n  getUser2Data = async shareUrl => {\r\n    const user2Data = await sptfy.getSharedProfile(shareUrl);\r\n\r\n    return user2Data;\r\n  };\r\n\r\n  createReport = async (userId, shareUrl) => {\r\n    sptfy.removeShareUrl();\r\n\r\n    const report = await sptfy.createCompatibilityReport(userId, shareUrl);\r\n\r\n    return report.data;\r\n  };\r\n\r\n  render() {\r\n    const { loading, error, user1Data, user2Data } = this.state;\r\n\r\n    if (loading)\r\n      return <Loader message={\"Calculating musical compatibility\"} />;\r\n    if (error) return <>{error}</>;\r\n\r\n    console.log(user2Data);\r\n\r\n    return (\r\n      <Redirect\r\n        to={`/display-report/${user1Data.user_id}/${user2Data.user_id}`}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default CreateCompatifyReport;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport sptfy from \"../services/spotifyService\";\r\nimport Loader from \"./common/loader\";\r\n\r\nclass LoggedIn extends Component {\r\n  state = { data: {}, loading: true, profileExists: true };\r\n\r\n  async componentDidMount() {\r\n    const currentUrl = window.location;\r\n    this.saveRefreshToken(currentUrl);\r\n\r\n    const refreshToken = sptfy.getRefreshToken();\r\n    const response = await sptfy.getCurrentSpotifyUser(refreshToken);\r\n    this.getProfileData(response.data.id);\r\n  }\r\n\r\n  getProfileData = async userId => {\r\n    try {\r\n      const data = await sptfy.getProfile(userId);\r\n      this.setState({ data: data.data, loading: false });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        console.log(\"This user does not have a profile yet.\");\r\n      this.setState({ loading: false, profileExists: false });\r\n    }\r\n  };\r\n\r\n  saveRefreshToken = async currentUrl => {\r\n    const tokenInfo = await sptfy.getToken(currentUrl);\r\n    sptfy.saveRefreshToken(tokenInfo.data.refresh_token);\r\n  };\r\n\r\n  render() {\r\n    const { loading, profileExists } = this.state;\r\n    const { userId } = this.props.match.params;\r\n    const shareUrl = sptfy.getShareUrl();\r\n\r\n    if (loading) {\r\n      return (\r\n        <Loader message={\"Checking whether profile exists for \" + userId} />\r\n      );\r\n    }\r\n\r\n    if (shareUrl && profileExists) return <Redirect to=\"/compatify\" />;\r\n    if (profileExists) return <Redirect to=\"/profile\" />;\r\n    if (!profileExists) return <Redirect to=\"/create-profile\" />;\r\n\r\n    return <></>;\r\n  }\r\n}\r\n\r\nexport default LoggedIn;\r\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Compatify\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n            My Profile\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Component } from \"react\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    sptfy.removeRefreshToken();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport LogInWithSpotify from \"./components/logInWithSpotify\";\r\nimport CreateProfile from \"./components/createProfile\";\r\nimport DisplayProfile from \"./components/displayProfile\";\r\nimport DisplayCompatifyReport from \"./components/displayCompatifyReport\";\r\nimport SharedProfile from \"./components/sharedProfile\";\r\nimport CreateCompatifyReport from \"./components/createCompatifyReport\";\r\nimport LoggedIn from \"./components/loggedIn\";\r\nimport NotFound from \"./components/notFound\";\r\nimport NavBar from \"./components/navBar\";\r\nimport Logout from \"./components/logout\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <NavBar />\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/login\" component={LogInWithSpotify} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/create-profile\" component={CreateProfile} />\r\n            <Route path=\"/logged-in\" component={LoggedIn} />\r\n            <Route path=\"/compatify\" component={CreateCompatifyReport} />\r\n            <Route\r\n              path=\"/display-report/:pk\"\r\n              component={DisplayCompatifyReport}\r\n            />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Route path=\"/profile\" component={DisplayProfile} />\r\n            <Route path=\"/p:shareCode\" component={SharedProfile} />\r\n            <Redirect from=\"/\" exact to=\"/login\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}