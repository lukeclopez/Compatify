{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/protectedRoute.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","services/movieService.js","services/spotifyService.js","components/spotifyForm.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/genreService.js","components/searchBox.jsx","components/movies.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","tokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","ProtectedRoute","path","Component","component","render","rest","Route","props","auth","Redirect","to","pathname","state","from","location","Input","name","label","className","htmlFor","id","Select","options","value","map","option","key","_id","Form","errors","validate","Joi","schema","abortEarly","details","item","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","onChange","type","movieUrl","getMovie","movieId","saveMovie","movie","body","authorizeSpotifyAccountAccess","userId","SpotifyForm","string","sptfy","authUrl","auth_url","window","title","genreId","genre","numberInStock","dailyRentalRate","onSubmit","renderInput","renderButton","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","columns","onClick","TableBody","renderCell","content","_","createKey","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","Link","onLike","deleteButtonColumn","onDelete","user","isAdmin","push","rerender","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","getGenres","SearchBox","placeholder","MovieForm","genres","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","renderSelect","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","RegisterForm","Logout","App","Switch","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","process","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5e6a62d5.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\n// This method was created to get rid of the bidirectional dependency between auth and http services.\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React from \"react\";\r\nimport auth from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser()) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        } else {\r\n          return Component ? <Component {...props} /> : render(props);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl;\r\n\r\nexport function authorizeSpotifyAccountAccess(userId) {\r\n  return http.get(apiUrl + `/auth/?user_id=${userId}`);\r\n}\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport default {\r\n  authorizeSpotifyAccountAccess\r\n};\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport sptfy from \"../services/spotifyService\";\r\n\r\nclass SpotifyForm extends Form {\r\n  state = {\r\n    data: {\r\n      userId: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    userId: Joi.string()\r\n  };\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const response = await sptfy.authorizeSpotifyAccountAccess(\r\n      this.state.data.userId\r\n    );\r\n    const authUrl = response.data.auth_url;\r\n\r\n    window.location = authUrl;\r\n    // this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Spotify</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"userId\", \"User ID\")}\r\n          {this.renderButton(\"Go\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpotifyForm;\r\n","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  state = {};\n\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteButtonColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  };\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n\n    if (user && user.isAdmin) {\n      this.columns.push(this.deleteButtonColumn);\n      this.setState({ rerender: \"Render again please!\" });\n    }\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function getGenres() {\n  return http.get(apiUrl + \"/genres\");\n}\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) console.log(\"x\");\n      toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Compatify\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/spotify\">\n            Spotify\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      console.log(response);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState = { errors };\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport SpotifyForm from \"./components/spotifyForm\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route path=\"/spotify\" component={SpotifyForm} />} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/spotify\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}